# SPDX-FileCopyrightText: Magenta ApS <https://magenta.dk>
# SPDX-License-Identifier: MPL-2.0
import pytest
from fastapi import Depends
from more_itertools import one
from starlette.testclient import TestClient

from fastramqpi.autogenerated_graphql_client import GraphQLClient
from fastramqpi.main import FastRAMQPI
from fastramqpi.pytest_util import retry
from fastramqpi.ramqp.mo import MORouter
from tests.fastramqpi.integration.conftest import Settings


@pytest.mark.integration_test
async def test_dependency_overrides() -> None:
    """Test that FastAPI app.dependency_overrides works for AMQP handlers."""

    def foo() -> str:
        return "foo"

    amqp_router = MORouter()
    received_messages = set()

    @amqp_router.register("person")
    async def listen_to_persons(msg: str = Depends(foo)) -> None:
        received_messages.add(msg)

    fastramqpi = FastRAMQPI(
        application_name="os2mo-test-integration",
        settings=Settings().fastramqpi,
        graphql_version=25,
        graphql_client_cls=GraphQLClient,
    )

    # Add our AMQP router(s)
    amqpsystem = fastramqpi.get_amqpsystem()
    amqpsystem.router.registry.update(amqp_router.registry)

    # Dependency-override
    app = fastramqpi.get_app()
    app.dependency_overrides[foo] = lambda: "bar"

    # Start FastRAMQPI
    with TestClient(app):
        # Publish message
        graphql_client: GraphQLClient = app.state.context["graphql_client"]
        await graphql_client._testing__create_employee(cpr_number="0605245013")

        @retry()
        async def verify() -> None:
            # It should be received with the overridden message dependency
            assert one(received_messages) == "bar"

        await verify()
