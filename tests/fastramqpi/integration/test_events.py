# SPDX-FileCopyrightText: Magenta ApS <https://magenta.dk>
# SPDX-License-Identifier: MPL-2.0

import pytest
from fastapi import APIRouter
from starlette.testclient import TestClient

from fastramqpi.autogenerated_graphql_client import EventSendInput
from fastramqpi.autogenerated_graphql_client import GraphQLClient
from fastramqpi.events import Event
from fastramqpi.events import GraphQLEvents
from fastramqpi.events import Listener
from fastramqpi.events import Namespace
from fastramqpi.main import FastRAMQPI
from fastramqpi.pytest_util import retry
from tests.fastramqpi.integration.conftest import Settings


@pytest.mark.integration_test
async def test_events() -> None:
    fastramqpi = FastRAMQPI(
        application_name="os2mo-test-integration",
        settings=Settings().fastramqpi,
        graphql_version=25,
        graphql_client_cls=GraphQLClient,
        graphql_events=GraphQLEvents(
            declare_namespaces=[
                Namespace(name="üåå"),
            ],
            declare_listeners=[
                Listener(
                    namespace="üåå",
                    user_key="test-listener",
                    routing_key="üîë",
                    url="/handler",
                ),
            ],
        ),
    )
    app = fastramqpi.get_app()

    router = APIRouter()
    received_events = []

    @router.post("/handler")
    async def handler(event: Event) -> None:
        received_events.append(event)

    app.include_router(router)

    with TestClient(app):
        graphql_client: GraphQLClient = app.state.context["graphql_client"]
        await graphql_client._testing__send_event(
            input=EventSendInput(
                namespace="üåå",
                routing_key="üîë",
                subject="‚úâÔ∏è",
                priority=1337,
            )
        )

        @retry()
        async def verify() -> None:
            assert received_events == [
                Event(
                    subject="‚úâÔ∏è",
                    priority=1337,
                )
            ]

        await verify()
